# Generated by Django 5.1.4 on 2025-01-02 15:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('module_icon', models.CharField(blank=True, max_length=50, null=True)),
                ('module_name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('is_menu', models.BooleanField(blank=True, default=True, null=True)),
                ('display_order', models.IntegerField(default=0)),
                ('module_description', models.TextField(blank=True, null=True)),
                ('module_url', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='UserServices.modules')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, choices=[('India', 'India'), ('USA', 'USA'), ('UK', 'UK'), ('Australia', 'Australia'), ('Canada', 'Canada'), ('Malaysia', 'Malaysia'), ('Singapore', 'Singapore'), ('UAE', 'UAE')], max_length=50, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('account_status', models.BooleanField(blank=True, choices=[('active', 'active'), ('inactive', 'inactive'), ('blocked', 'blocked')], default=True, null=True)),
                ('role', models.CharField(blank=True, choices=[('admin', 'admin'), ('user', 'user'), ('supplier', 'supplier'), ('customer', 'customer'), ('staff', 'staff'), ('manager', 'manager')], max_length=50, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('passowrd', models.CharField(blank=True, max_length=50, null=True)),
                ('social_media_links', models.TextField(blank=True, null=True)),
                ('additional_details', models.JSONField(blank=True, null=True)),
                ('language', models.CharField(blank=True, choices=[('English', 'English'), ('Hindi', 'Hindi'), ('Tamil', 'Tamil'), ('Telugu', 'Telugu'), ('Kannada', 'Kannada'), ('Malayalam', 'Malayalam'), ('Gujarati', 'Gujarati'), ('Marathi', 'Marathi'), ('Bengali', 'Bengali'), ('Punjabi', 'Punjabi'), ('Odia', 'Odia'), ('Urdu', 'Urdu'), ('Sanskrit', 'Sanskrit')], max_length=50, null=True)),
                ('department', models.CharField(blank=True, choices=[('IT', 'IT'), ('HR', 'HR'), ('Finance', 'Finance'), ('Sales', 'Sales'), ('Marketing', 'Marketing'), ('Production', 'Production'), ('Quality', 'Quality'), ('Purchase', 'Purchase'), ('Logistics', 'Logistics'), ('Admin', 'Admin'), ('Security', 'Security'), ('Legal', 'Legal'), ('R&D', 'R&D'), ('Maintenance', 'Maintenance'), ('Service', 'Service'), ('Support', 'Support'), ('Training', 'Training'), ('Consulting', 'Consulting'), ('Operations', 'Operations'), ('Management', 'Management'), ('Others', 'Others')], max_length=50, null=True)),
                ('designation', models.CharField(blank=True, choices=[('CEO', 'CEO'), ('CFO', 'CFO'), ('CTO', 'CTO'), ('CMO', 'CMO'), ('COO', 'COO'), ('CIO', 'CIO'), ('CDO', 'CDO'), ('CRO', 'CRO'), ('CISO', 'CISO'), ('CSO', 'CSO'), ('CPO', 'CPO'), ('CLO', 'CLO'), ('CBO', 'CBO'), ('CVO', 'CVO'), ('CQO', 'CQO'), ('CLO', 'CLO'), ('CDO', 'CDO'), ('CNO', 'CNO')], max_length=50, null=True)),
                ('time_zone', models.CharField(blank=True, choices=[('IST', 'IST'), ('EST', 'EST'), ('PST', 'PST'), ('CST', 'CST'), ('MST', 'MST'), ('PST', 'PST'), ('GMT', 'GMT'), ('CET', 'CET'), ('EET', 'EET'), ('SGT', 'SGT'), ('MYT', 'MYT'), ('AET', 'AET'), ('NZT', 'NZT')], max_length=50, null=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('last_device', models.CharField(blank=True, max_length=50, null=True)),
                ('last_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, choices=[('USD', 'USD'), ('INR', 'INR'), ('EUR', 'EUR'), ('GBP', 'GBP'), ('AUD', 'AUD'), ('CAD', 'CAD'), ('SGD', 'SGD'), ('MYR', 'MYR'), ('AED', 'AED'), ('NZD', 'NZD')], max_length=50, null=True)),
                ('domain_name', models.CharField(blank=True, max_length=50, null=True)),
                ('plan_type', models.CharField(blank=True, choices=[('free', 'free'), ('basic', 'basic'), ('standard', 'standard'), ('premium', 'premium'), ('enterprise', 'enterprise')], max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('domain_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserShippingAddress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('address_type', models.CharField(blank=True, choices=[('home', 'home'), ('office', 'office'), ('other', 'other')], max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, choices=[('India', 'India'), ('USA', 'USA'), ('UK', 'UK'), ('Australia', 'Australia'), ('Canada', 'Canada'), ('Malaysia', 'Malaysia'), ('Singapore', 'Singapore'), ('UAE', 'UAE')], max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPermissions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_view', models.BooleanField(blank=True, default=True, null=True)),
                ('is_add', models.BooleanField(blank=True, default=True, null=True)),
                ('is_edit', models.BooleanField(blank=True, default=True, null=True)),
                ('is_delete', models.BooleanField(blank=True, default=True, null=True)),
                ('domain_user_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='UserServices.modules')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('activity', models.TextField(blank=True, null=True)),
                ('activity_type', models.CharField(blank=True, max_length=50, null=True)),
                ('activity_date', models.DateTimeField(auto_now_add=True)),
                ('activity_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('activity_device', models.CharField(blank=True, max_length=50, null=True)),
                ('domain_user_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
